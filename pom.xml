<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.ling5821</groupId>
    <artifactId>lombok-mapstruct-maven-test</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>item</module>
    </modules>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <java.version>1.8</java.version>
        <org.mapstruct.version>1.4.1.Final</org.mapstruct.version>
        <org.projectlombok.version>1.18.16</org.projectlombok.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    </properties>

    <dependencies>

        <!-- 第二种方式 全局引入 lombok 和 mapstruct-processor 并且保证 !!!! lombok 依赖 在 mapstruct-processor 前 !!!!
            至于 mapstruct 也可以全局引入 但不必要，用到再引入也可以  -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${org.projectlombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
    </dependencies>

<!--   添加BUILD的情况下不引入mapstruct-processor -->
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <!-- 第一种方式 添加 annotationProcessorPaths 此种存在的弊端 因为 annotationProcessorPaths 添加后，只会读取指定的 path 下的 annotationProcessor
                        导致通过 META-INF/services/javax.annotation.processing.Processor 指定的 annotationProcessor 无法生效, 所以需要明确配置所有用到的 annotationProcessor -->
<!--                        <annotationProcessorPaths>-->
<!--                            <path>-->
<!--                                <groupId>org.projectlombok</groupId>-->
<!--                                <artifactId>lombok</artifactId>-->
<!--                                <version>${org.projectlombok.version}</version>-->
<!--                            </path>-->
<!--                            <path>-->
<!--                                <groupId>org.mapstruct</groupId>-->
<!--                                <artifactId>mapstruct-processor</artifactId>-->
<!--                                <version>${org.mapstruct.version}</version>-->
<!--                            </path>-->
                            <!-- 不加会出现属性不存在的报错 -->
<!--                            <path>-->
<!--                                <groupId>org.projectlombok</groupId>-->
<!--                                <artifactId>lombok-mapstruct-binding</artifactId>-->
<!--                                <version>${lombok-mapstruct-binding.version}</version>-->
<!--                            </path>-->
<!--                        </annotationProcessorPaths>-->
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>